SCRIPT = LINE | LINE SCRIPT

EXPRESSION = FUNCTION_ASSIGNMENT_EXPRESSION
           | ASSIGNMENT_EXPRESSION
           | INDEX_ASSIGNMENT_EXPRESSION
           | TOPLEVEL_EXPRESSION
LINE = EOL | EXPRESSION EOL | EXPRESSION "@" identifier EOL

IDENTIFIER_LIST = identifier "," identifier | identifier "," IDENTIFIER_LIST
FUNCTION_ASSIGNMENT_EXPRESSION = identifier "(" ")" "=" TOPLEVEL_EXPRESSION
                               | identifier "(" identifier ")" "=" TOPLEVEL_EXPRESSION
                               | identifier "(" IDENTIFIER_LIST ")" "=" TOPLEVEL_EXPRESSION

ASSIGNMENT_EXPRESSION = identifier "=" TOPLEVEL_EXPRESSION
INDEX_ASSIGNMENT_EXPRESSION = identifier "[" TOPLEVEL_EXPRESSION "]" "=" TOPLEVEL_EXPRESSION // Needs correction

TOPLEVEL_EXPRESSION = TERNARY_EXPRESSION

TERNARY_EXPRESSION = BOOLEAN_OR_EXPRESSION
                   | BOOLEAN_OR_EXPRESSION "?" BOOLEAN_OR_EXPRESSION ":" BOOLEAN_OR_EXPRESSION
                   | BOOLEAN_OR_EXPRESSION "?" BOOLEAN_OR_EXPRESSION ":" TERNARY_EXPRESSION

BOOLEAN_OR_EXPRESSION = BOOLEAN_AND_EXPRESSION
                      | BOOLEAN_AND_EXPRESSION "||" BOOLEAN_AND_EXPRESSION
                      | BOOLEAN_AND_EXPRESSION "||" BOOLEAN_OR_EXPRESSION

BOOLEAN_AND_EXPRESSION = BOOLEAN_CMP_EXPRESSION
                       | BOOLEAN_CMP_EXPRESSION "&&" BOOLEAN_CMP_EXPRESSION
                       | BOOLEAN_CMP_EXPRESSION "&&" BOOLEAN_AND_EXPRESSION

BOOLEAN_CMP_OPERATOR = "<" | ">" | "<=" | ">=" | "==" | "!="
BOOLEAN_CMP_EXPRESSION = BITWISE_OR_EXPRESSION
                       | BITWISE_OR_EXPRESSION BOOLEAN_CMP_OPERATOR BITWISE_OR_EXPRESSION
                       | BITWISE_OR_EXPRESSION BOOLEAN_CMP_OPERATOR BOOLEAN_CMP_EXPRESSION

BITWISE_OR_EXPRESSION = BITWISE_XOR_EXPRESSION
                      | BITWISE_XOR_EXPRESSION "|" BITWISE_XOR_EXPRESSION
                      | BITWISE_XOR_EXPRESSION "|" BITWISE_OR_EXPRESSION

BITWISE_XOR_EXPRESSION = BITWISE_AND_EXPRESSION
                       | BITWISE_AND_EXPRESSION "^" BITWISE_AND_EXPRESSION
                       | BITWISE_AND_EXPRESSION "^" BITWISE_XOR_EXPRESSION

BITWISE_AND_EXPRESSION = BITWISE_SHIFT_EXPRESSION
                       | BITWISE_SHIFT_EXPRESSION "&" BITWISE_SHIFT_EXPRESSION
                       | BITWISE_SHIFT_EXPRESSION "&" BITWISE_AND_EXPRESSION

BITWISE_SHIFT_OPERATOR = "<<" | ">>"
BITWISE_SHIFT_EXPRESSION = ARITHMETIC_AS_EXPRESSION
                         | ARITHMETIC_AS_EXPRESSION BITWISE_SHIFT_OPERATOR ARITHMETIC_AS_EXPRESSION
                         | ARITHMETIC_AS_EXPRESSION BITWISE_SHIFT_OPERATOR BITWISE_SHIFT_EXPRESSION

ARITHMETIC_AS_OPERATOR = "+" | "-"
ARITHMETIC_AS_EXPRESSION = ARITHMETIC_MD_EXPRESSION
                         | ARITHMETIC_MD_EXPRESSION ARITHMETIC_AS_OPERATOR ARITHMETIC_MD_EXPRESSION
                         | ARITHMETIC_MD_EXPRESSION ARITHMETIC_AS_OPERATOR ARITHMETIC_AS_EXPRESSION

ARITHMETIC_MD_OPERATOR = "*" | "/" | "%"
ARITHMETIC_MD_EXPRESSION = ARITHMETIC_IMPLICIT_MUL_EXPRESSION
                         | ARITHMETIC_IMPLICIT_MUL_EXPRESSION ARITHMETIC_MD_OPERATOR ARITHMETIC_IMPLICIT_MUL_EXPRESSION
                         | ARITHMETIC_IMPLICIT_MUL_EXPRESSION ARITHMETIC_MD_OPERATOR ARITHMETIC_MD_EXPRESSION

ARITHMETIC_IMPLICIT_MUL_EXPRESSION = ARITHMETIC_EXPONENTIATION_EXPRESSION
                                   | ARITHMETIC_EXPONENTIATION_EXPRESSION ARITHMETIC_EXPONENTIATION_EXPRESSION
                                   | ARITHMETIC_EXPONENTIATION_EXPRESSION ARITHMETIC_IMPLICIT_MUL_EXPRESSION

ARITHMETIC_EXPONENTIATION_EXPRESSION = FUNCTION_CALL_EXPRESSION
                                     | FUNCTION_CALL_EXPRESSION "**" FUNCTION_CALL_EXPRESSION
                                     | FUNCTION_CALL_EXPRESSION "**" ARITHMETIC_EXPONENTIATION_EXPRESSION

EXPRESSION_LIST = TOPLEVEL_EXPRESSION "," TOPLEVEL_EXPRESSION | TOPLEVEL_EXPRESSION "," EXPRESSION_LIST
FUNCTION_CALL_EXPRESSION = identifier "(" ")"
                         | identifier "(" TOPLEVEL_EXPRESSION ")"
                         | identifier "(" EXPRESSION_LIST ")"
                         | BOOLEAN_NOT_EXPRESSION

// Next 3 need correction

BOOLEAN_NOT_EXPRESSION = BITWISE_NOT_EXPRESSION
                       | "!" BITWISE_NOT_EXPRESSION
                       | "!" BOOLEAN_NOT_EXPRESSION

BITWISE_NOT_EXPRESSION = "~" ARITHMETIC_NEG_EXPRESSION
                       | "~" BITWISE_NOT_EXPRESSION
                       | ARITHMETIC_NEG_EXPRESSION

ARITHMETIC_NEG_EXPRESSION = "-" INDEXING_EXPRESSION
                          | "-" ARITHMETIC_NEG_EXPRESSION
                          | INDEXING_EXPRESSION

INDEXING_LIST = "[" TOPLEVEL_EXPRESSION "]" "[" TOPLEVEL_EXPRESSION "]"
              | "[" TOPLEVEL_EXPRESSION "]" INDEXING_LIST
INDEXING_EXPRESSION = term
                    | term "[" TOPLEVEL_EXPRESSION "]"
                    | term INDEXING_LIST

TERM = "(" TOPLEVEL_EXPRESSION ")" | ATOMIC_VALUE

ATOMIC_VALUE = integer_literal | float_literal | boolean_literal | string_literal | identifier